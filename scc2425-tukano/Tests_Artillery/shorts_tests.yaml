config:
  target: https://app59457-72394northeurope.azurewebsites.net/rest
  plugins:
    metrics-by-endpoint: {} # Used to get metrics for each endpoint individually.
  processor: ./test-utils.js
  phases:
    - name: "Warm up"    # WARM UP PHASE: duration: 10s, starting with 1 new client/sec up to 5 new clients/sec
      duration: 10
      arrivalRate: 1
      rampTo: 5
    - name: "Main test"    # MAIN TESTS: duration: 30s, with 10 new clients/sec. Should be varied depending on scenario.
      duration: 30
      arrivalRate: 10

scenarios:
  - name: 'Create Short'
    weight: 1
    beforeScenario: "registerUserIfEmpty"
    flow:
      - post:
          url: "/shorts/{{ userId }}?pwd={{ pwd }}"
          headers:
            Content-Type: application/json
          beforeRequest: "createRandomShort"
          afterResponse: "processShortCreation"

  - name: 'Get Short'
    beforeScenario: "registerUserAndCreateShortIfEmpty"
    flow:
      - get:
          url: "/shorts/{{ shortId }}"
          headers:
            Content-Type: application/json
          beforeRequest: "loadShortFromRegistered"

  - name: 'Get User Shorts'
    beforeScenario: "registerUserAndCreateShortIfEmpty"
    flow:
      - get:
          url: "/shorts/{{ userId }}/shorts"
          headers:
            Content-Type: application/json
          beforeRequest: "loadUserFromRegistered"

  - name: 'Follow User'
    flow:
      - post:
          url: "/shorts/{{ userId1 }}/{{ userId2 }}/followers?pwd={{ pwd }}" #first one is the follower
          headers:
            Content-Type: application/json
          beforeRequest: "prepareFollowRequest"

  - name: 'Get Followers'
    beforeScenario: "registerUserIfEmpty"
    flow:
      - get:
          url: "/shorts/{{ userId }}/followers?pwd={{ pwd }}"
          headers:
            Content-Type: application/json
            beforeRequest: "loadUserFromRegistered"

  - name: 'Like Short'
    beforeScenario: "registerUserAndCreateShortIfEmpty"
    flow:
      - post:
          url: "/shorts/{{ shortId }}/{{ userId }}/likes?pwd={{ pwd }}"
          headers:
            Content-Type: application/json
          beforeRequest: "prepareLikeRequest"

  - name: 'Get Likes'
    beforeScenario: "registerUserAndCreateShortIfEmpty"
    flow:
      - get:
          url: "/shorts/{{ shortId }}/likes?pwd={{ pwd }}"
          headers:
            Content-Type: application/json
          beforeRequest: "loadShortFromRegistered"

  - name: 'Get User Feed'
    beforeScenario: "registerUserAndCreateShortIfEmpty"
    flow:
      - get:
          url: "/shorts/{{ userId }}/feed?pwd={{ pwd }}"
          headers:
            Content-Type: application/json
          beforeRequest: "loadUserFromRegistered"
